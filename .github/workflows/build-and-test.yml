name: Build and Test

on:
  pull_request:
    branches:
      - main
      - maintenance/update-packages
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    name: "🔧 Setup Environment Variables"
    outputs:
      IsMainPR: ${{ steps.set_flags.outputs.IsMainPR }}
      IsMain: ${{ steps.set_flags.outputs.IsMain }}
      IsPR: ${{ steps.set_flags.outputs.IsPR }}
    steps:
      - name: Set IsMainPR and IsMain flags
        id: set_flags
        run: |
          echo "IsMainPR=false" >> $GITHUB_OUTPUT
          echo "IsMain=false" >> $GITHUB_OUTPUT
          echo "IsPR=false" >> $GITHUB_OUTPUT
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.base_ref }}" == "main" ]]; then
            echo "IsMainPR=true" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "IsMain=true" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "IsPR=true" >> $GITHUB_OUTPUT
          fi

      - name: Show results
        run: |
          echo "IsMainPR: ${{ steps.set_flags.outputs.IsMainPR }}"
          echo "IsMain: ${{ steps.set_flags.outputs.IsMain }}"
          echo "IsPR: ${{ steps.set_flags.outputs.IsPR }}"

  build-app:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🛠️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 🔨 Install Dependencies
        run: npm ci

      - name: 🧹 Type Check
        run: npm run type-check

      - name: 🏗️ Build App
        run: npm run build

      - name: ✅ Test App
        run: npm run test

      - name: Run Cypress Tests
        run: npm run cy:run

  label:
    runs-on: ubuntu-latest
    needs: [setup]
    if: needs.setup.outputs.IsMainPR != 'true' && needs.setup.outputs.IsMain != 'true'
    permissions: write-all
    name: "🏷️ Label PR"
    steps:
      - name: 🏷️ Label PR with automerge
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              issue_number: context.payload.pull_request.number,
              labels: ['automerge']
            });
